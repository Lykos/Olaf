#include "olaf/transposition_table/zobristhash.h"

#include "olaf/rules/chessboard.h"
#include "olaf/rules/color.h"
#include "olaf/rules/bitboard.h"

namespace olaf
{

static ZobristHash::hash_t c_piece_randomness[768] = {
  0x9da3726e2c5b87d9c1f4,
  0x0f63d1604b038be62b03,
  0x78cd443da976ee657fbd,
  0x078635b08e628e55152c,
  0x83bcc3d4b2225776170a,
  0x6fbeb3a2b665c2357b99,
  0x28a858e1110275b4e640,
  0x8b4262c8224fe5a51b87,
  0x98c2a33a2169b658b73a,
  0x7f7e24ec485d51f1d3ad,
  0x61b4a0ddd60990a0536a,
  0x557878eb416f05d27bda,
  0x4d3b0818441f6eb77853,
  0x3ae9d76a2423b2381578,
  0x496d837d5a8cfac52364,
  0x035a69da8e7024320059,
  0x07d5b13c3a8b04f67aa8,
  0x16e263624502c7285a88,
  0x1c6454b8c9799ea632e8,
  0x62f099812a040db79d14,
  0x75c166fe4976cf03f9dc,
  0x1356d1b73d9b0bf1e58e,
  0x2961539d0a8bf3e36bba,
  0x6004e697d13128e4e7de,
  0x3d6810cc065d7a5791f7,
  0x898a32b89b3c21555232,
  0x54e992cfa705d48414b9,
  0x11bf07dba44f91a9c1cf,
  0x6db0c40bac31c3e89eef,
  0x9b4ab6b4487566a1e9af,
  0x63d0c53ffa6ac652a0e5,
  0x56c0b07e9b2b23e1113d,
  0x553d769fee1a78c2e8c3,
  0x3734723cf881f840cc1b,
  0x6a73e8510c792dc5088d,
  0x7715a6c87f3f64b29b34,
  0x4dcab55c44860c84e62a,
  0x8e6f063bc12ad106557c,
  0x9f02804da45121d6ed23,
  0x7116d4da5728def0b263,
  0x55275955480a108871cd,
  0x7c786799d74b4f254b77,
  0x2c6b01496335bd60d4dc,
  0x5b54715beb2bead53ca4,
  0x735c8651be1fd3a122e9,
  0x3a858277481d5cf369de,
  0x8167a153097012b94dec,
  0x2a41d3365c1c9683f8c6,
  0x371d69a1ab01ef8684d4,
  0x899584c81540d2442ab8,
  0x9decf89cec7a0c97d64a,
  0x898f625e1e2dfb75dcab,
  0x4932d72db74555611eae,
  0x0cd717d17d694c18a070,
  0x2278a040921a92b0591f,
  0x118f52a6d42d2ed3304d,
  0x82c2b7d44a3a34e908ce,
  0x0555d4570341a684ac9f,
  0x9dee55c7670c38d8ce92,
  0x0b4432c255541bf53267,
  0x396a32d24c8de8b58e16,
  0x6e9567cf847265642a67,
  0x9c994876b17b0f71fed7,
  0x7703c1bd281819f6720b,
  0x6b3cb150b14fa6839e5a,
  0x47b8b0683078b5a8ff82,
  0x3da750adb90cded41061,
  0x9631a5f73e2f3d90c9ad,
  0x02d2f133f37855694368,
  0x8b3ec4318a06e8a3f2f3,
  0x2cafa6f53748b5d1689f,
  0x1e4ae1c55d05f4173896,
  0x15695928257837a1b44b,
  0x8da0c48aea697015ca8a,
  0x89b6588f5a03f3421aca,
  0x5fc3e8810c1afd0194f7,
  0x8001e8517364313710e3,
  0x719da119d08df123ebb9,
  0x565184b3bd363e804f41,
  0x5f6c570bb97d5794e346,
  0x485f2448cf475bb7eae7,
  0x7b3556bc5e617b96092e,
  0x956e5661ec1820e28709,
  0x26fb4261f8890a00b1ff,
  0x62acc4fb6b0e48f71a01,
  0x9f9e70fe603d3133a895,
  0x8e8e082c75580922fccd,
  0x361a183edd3217797c3e,
  0x6b59f04cab5751a0bec8,
  0x036e92a81b886b304732,
  0x254e26b4214e9a985c3e,
  0x195950d31b3aa373cf55,
  0x6e8e8217b21cfa298ad3,
  0x3fcee60d38948c423ed9,
  0x51c9f061936dff03b7df,
  0x27ec736bda551a76b7d4,
  0x5eaaa9b7fc733545af0d,
  0x997df000db6785c32726,
  0x9359771e42583238f3ed,
  0x5271a080a47de7f93f3d,
  0x7f7697459b1147467971,
  0x9c49d7cfb879c039a548,
  0x0a3d98f51d8fb8e4c4e1,
  0x1a96d17eff85e9e3757a,
  0x18462143da780310dc3f,
  0x9a9a63ceda7e0650be12,
  0x2dfc62fa7d15e7504003,
  0x22e5946147388d7594bb,
  0x054e6960339a91414419,
  0x4a9e95c48a6a6ce5a578,
  0x3bb5245eb20db0c2191e,
  0x6957e568071266b75a19,
  0x8bd56878b88bf6412a97,
  0x5fe039ca4548a2d43cdc,
  0x8af990e44e390d13ff14,
  0x6c405327753bb7c1d156,
  0x2aa5442e240380c50fe3,
  0x273bd4c5329f2849f1d7,
  0x62246474dd5622038a56,
  0x3651d8e14d72d4999023,
  0x13e9c884775a0fd68e37,
  0x8bbd7725690c3e796914,
  0x1b6ea8466f88f8091cf3,
  0x93e7347e8e84baa0ebbe,
  0x6f6d564cd11da1a03ff8,
  0x2c3884bf713e3f14d3fb,
  0x738c47d6f844f0490ea5,
  0x534334d9ba814a42ad00,
  0x365df2762395e0453372,
  0x00d62532766407b91004,
  0x60d510600a29ea855afb,
  0x0994a689991a33558f1a,
  0x5e63a744f27d36a3f795,
  0x3e57163aa40bcad244e7,
  0x4ea5e98e49934462e9e0,
  0x871dc4e93e82b3397ae2,
  0x2ad2e989440ac3e7f2a6,
  0x8c69f4d75e73647272eb,
  0x7c33a48a9b5104d8c0e8,
  0x3852e9548a799fd69c0d,
  0x3b0397871170a6787f46,
  0x9b5fe8122b16fba48c48,
  0x370ce558a392c3d3b84d,
  0x2691289f4c3890b12a5c,
  0x70e623c96b0a31c8a11c,
  0x1ad503c77f9c9e63bb4e,
  0x946405356750e8f923c4,
  0x87d3a14c4c7a12e23e8f,
  0x976e54053811bf18ba5e,
  0x5ec94065e70ac8682bd2,
  0x12ee068b3d0cb976962d,
  0x85bb25979670cba5e343,
  0x4691f1c5762b4d81406d,
  0x3252549016414e513944,
  0x34ab3831a75108d4611b,
  0x4027692d9393c9929cc7,
  0x548f05b75a63098193db,
  0x89cc5901a00c75657e05,
  0x8111142cfa4580a4fa51,
  0x2f31d8835a50de495f73,
  0x0cf4e68e290ebcb2aae9,
  0x9479156eb524607856ef,
  0x723d0696ff4ecc12f914,
  0x681442361b93dc94fe0e,
  0x416db1411d1af3e7aee2,
  0x2d632383f52147e563d5,
  0x6b572691ba0856c19d55,
  0x1bd399cd3b20e63784c2,
  0x2013d6255669f94947df,
  0x8d097294403ce88360c8,
  0x43ba50851d0df5b34788,
  0x758c636eb233d70851d3,
  0x7957b66ef946cb57251f,
  0x3294307e806b6d571a3b,
  0x59bf1442108cba002839,
  0x803b43281d2d0a025469,
  0x33a195b7bc9b26d3a1bb,
  0x9bb3d8d1e16b5660e21d,
  0x3309b1acb54fe6a79538,
  0x11f462ae336a3878e112,
  0x787ae1eee2149390b8a2,
  0x6a82f1582261c911a47b,
  0x4a1a284cc879f519db60,
  0x32a706777d6c4ba5e3e9,
  0x152013aced14cea58293,
  0x2ad444cd0e074437d432,
  0x6f1816417b054e95bfec,
  0x6672c4b38c0179601840,
  0x890d36fa649b5b56d4a4,
  0x67adc29b3e3a0b630b5d,
  0x7b72e51a749d5fa4a6f9,
  0x0a0f01a8369a38385a7d,
  0x9e67e6ea038d94e99841,
  0x9e9b63ea15791b58f728,
  0x7fd6f4fdb664d5278ddf,
  0x11fe93ce151613f58c94,
  0x844474918906d9a8d75b,
  0x734a20460475eed3a93a,
  0x91aea04f643410a78353,
  0x6d810445a753c4564ba6,
  0x69aef6ad3c27da906f83,
  0x2f8390f985188c48416b,
  0x24b113d3657164c5956c,
  0x1c31d5612673a601555d,
  0x89c7b0a38458b339d972,
  0x13a1c0d21a62e116c15b,
  0x1adf88a5d126889710bf,
  0x516135275307a6156940,
  0x8439b0fb1a450481d414,
  0x9d25001bbf5358488e12,
  0x4b019028c80e7236c2cd,
  0x6c16414a14479577c08d,
  0x35dde4e304093025f29a,
  0x634268fb2d1e09e020aa,
  0x6edf596e3a5b46694175,
  0x419cb66f8b92477973d6,
  0x46d4e062dc4a2217a9d2,
  0x2f3040fce88a4eb83859,
  0x33ab42e63192fb6365f6,
  0x2afe4059f45bbd069f9a,
  0x14443914f61eb0111c63,
  0x99b949650e6b6ca15b96,
  0x2035303d73127de480fe,
  0x4c4e18874b1ac2a42e25,
  0x242848ed9b2be6d8bd44,
  0x3daec91b3c5f65a69636,
  0x983e68f46e1d4417d3f0,
  0x8ba7997a5b9c7c17d4c6,
  0x8c8c0862a10852025baa,
  0x9280a2b83e04a1d7ccd8,
  0x4ea656d87a6da9885456,
  0x645c830bc41742d10faa,
  0x71c507d98847adf1a746,
  0x27de5248da3bc3f7aea0,
  0x3de4204bb2087781ba73,
  0x71ed55dcab0896737e49,
  0x5572d438c214e0235574,
  0x3729a3f526338a12b73b,
  0x278918d74a1a3f9343d1,
  0x5889b6e6802d5de1cb8e,
  0x64ca8860021fc33333ee,
  0x98213338035a89083cc3,
  0x746a81935476c8a00385,
  0x7a33a4b4430ce1657274,
  0x1008c8aefb77dd48dcb1,
  0x10f2f1494f35fc80499a,
  0x11d546479b44abc67043,
  0x4bb8e0987b697a361310,
  0x1829890d1e1e7ad06e7e,
  0x29369316764e71149131,
  0x7256717b2e18d014faca,
  0x9a88a38a8e068652a636,
  0x719713cc8f64601386ac,
  0x028766cac3400fc14736,
  0x70e344bca647e641204b,
  0x7d9bb8ef7b851b56f03b,
  0x3d38b810b6948d094ca4,
  0x7ff90496ab561728881a,
  0x1aaee76a0d16f0709679,
  0x7c86b96e8a510da543b3,
  0x716a33312b5fde969c7b,
  0x045ba091530b5e01b70f,
  0x8bd01894391c3eb1386e,
  0x644867a2712b65228ac1,
  0x07e1901f7d0374e38d42,
  0x4ccc76468f532fe8e12f,
  0x977287a4467c8f29f7f6,
  0x2db321257e7b11379b94,
  0x70ae70680e22ac289b03,
  0x753506b5e23e29d281cd,
  0x84c7158a653206141fbe,
  0x7faf84d4e014b3f17b10,
  0x974ae79b70606f386859,
  0x16e621edd63b7790107b,
  0x900e280bed474b8744a6,
  0x576e63480d8bf297550b,
  0x52ad608de36ee1411ca8,
  0x790e45a9fa3b76f946f7,
  0x88afa189661672e38b7d,
  0x95ac61c22f6b5b04a756,
  0x6685f5cf962014e04f72,
  0x36fea5f06473678755e5,
  0x04e746490f1f86f0d20d,
  0x862cf3977a2e5c7362f6,
  0x1fc956aa74594fe3c833,
  0x79a206bc1d835a869f39,
  0x8c8a53fbd35b0191f31f,
  0x9198d2eccc9da7326fbb,
  0x1bab092c9c910914c553,
  0x30bdb0d9ee175f22c06d,
  0x6eb3c37ae68d92c7eb71,
  0x7d1b535edd71b5929ee6,
  0x3dc32686364cba33b211,
  0x2515c440e29a4e082d0f,
  0x9660551d95428a69d8ba,
  0x06f4f0bda73377f1c1da,
  0x59671859519ab9797dd6,
  0x6cec98190f57234405e2,
  0x1df2a459a77291856e6e,
  0x62f9d613e44096402de5,
  0x7a91d6c6007835d68b1d,
  0x3c5641a99a1d05e5c81a,
  0x3605b461061df9b4a2c5,
  0x1785b081c997c4f050eb,
  0x0e90b85727033c777ddd,
  0x30c357c35e7ceed170ca,
  0x91cc900810299bb6187a,
  0x1448a5fa1540168117e5,
  0x578683efc34448d31031,
  0x3e2f950f547c73f8ac41,
  0x77d2827f86786ef07d07,
  0x4936b0990a69f5220f7c,
  0x8154f4186e5d5ea89920,
  0x7146445cd2111ac2baba,
  0x612817da8605a3f820f3,
  0x325e0591ca563399fdf9,
  0x28d486df626d98c9e00b,
  0x74e862ba7100c303489b,
  0x378760ccb61ec66967a6,
  0x321408773d25d7151881,
  0x07c6e76752060be7baf6,
  0x9a3737bc3c8babd599dc,
  0x8098774818629835b92e,
  0x3efef65ae358a2704e3b,
  0x3f0da0ce6d04f4466e43,
  0x094154bb435ff121557d,
  0x601b702a483479226344,
  0x888da9bb81516686e3d0,
  0x287fa937b18167022445,
  0x3c6c310f89792053de89,
  0x9b8b06f0bf7c46f8fb12,
  0x3022d1b099612a503677,
  0x9d260966838387779388,
  0x8ee8d5492d4e9652786f,
  0x5292c701f108991112a8,
  0x5c00252f8c8e0359dded,
  0x1efd120dc76fbb652232,
  0x45bb74aa362bf4a1f2ef,
  0x739d4688ff534b90e9b2,
  0x2cf7b4b899176069e277,
  0x987ef531c62d9b07e291,
  0x51cc477697651185b70a,
  0x99e7206b4a5be6132eb6,
  0x3cf5909c559b89e134eb,
  0x1d2949f31417dc9678a0,
  0x28746063cb2a7fe22464,
  0x3b0089f15a986be10c9e,
  0x823371f4eb2480016709,
  0x67da535062172ed1e55e,
  0x2f0e90bef6115222f79d,
  0x43c261b673113d00ae2f,
  0x0fd0d2cef310f6e9d166,
  0x641f01685369db67d296,
  0x1756e48d8a2f49e322c2,
  0x97f940cab486afc2704c,
  0x18ae9064e13181695393,
  0x13c5f0bff5819663b69c,
  0x9f7ab8727d8c66b8537f,
  0x351303f61d5412d9ec8c,
  0x655798c6225a8869f55f,
  0x2cc21952858d0009f780,
  0x5204a2a9391972b663fc,
  0x5725b82e484254d0c73c,
  0x711a21129216dd176dda,
  0x6a83a2a50f7f71203ec6,
  0x154ae6bc22795b29ad40,
  0x4e2d36fe43432056f0a0,
  0x344123661d6356e98ed5,
  0x847ba17fd73907619b74,
  0x3e0c870210289ba5260d,
  0x34163737a006ac68dd69,
  0x844f51fe9c816804b11c,
  0x177e388a952f34b5dd56,
  0x77909974c12daa5410e1,
  0x3f3661e2c3022750ef6c,
  0x25d369839b027679083e,
  0x4925b08a135fe60351b9,
  0x71dab8aa90638c679877,
  0x1138603b1921cbe28b67,
  0x4a0087215d802c11d271,
  0x2aa301413e9c04048c1b,
  0x85d93037df39d2289ea5,
  0x2d3b1290464f5995f5b5,
  0x1e572828df0f51e6010d,
  0x42a074e0dc89c523658d,
  0x1b9b9577e16b50825ea5,
  0x681c056aa37e1341e1b4,
  0x7aa2c0856a804d75ba82,
  0x3c29c818b41f24846120,
  0x650848bb997082c78807,
  0x51e6b5837f8148d2ba9f,
  0x6d97370fde6a1ea9f9f5,
  0x28ebe49a590e72b07ab9,
  0x9407077ab9210a86adb5,
  0x96d8f7074c288d15c979,
  0x3acdd570532f4d27e35f,
  0x7c464012b6607e9912ed,
  0x0ad6a042a42e82f2f221,
  0x446ed1a89d014ce9a97d,
  0x774479d5295da1b6064b,
  0x389c318758528c14b00a,
  0x24e328c16a924203466e,
  0x5afa947e4b786c46a461,
  0x8c8b59d35b637c69df8a,
  0x99ee72ccf297d079beb4,
  0x8e3991dd15531158678a,
  0x9b3597c9ca387d32d366,
  0x8e9b93166d331dc3ba6c,
  0x84f585e6f21f0da0eeee,
  0x0ac2f086863441385b60,
  0x3730b0d15522b8531b42,
  0x9d9dd890fd04ee063b52,
  0x1bffb7f07f25ce983f26,
  0x94a98370e282d4f6f085,
  0x14f1a145dc9431d8a62d,
  0x80a827a9ed525642964c,
  0x9b6a6589a81fd9522578,
  0x0fe2413b7c68d019e626,
  0x2198c6ee9d85deb80779,
  0x7b7177cfa54e4aa24ab2,
  0x5cfbd09644673d44e545,
  0x900547fb2238bd45baf3,
  0x032e75f4087cba2361f9,
  0x4026b1ced16ba7341d9c,
  0x552fe208986e8ca5e2ce,
  0x001aa218d1525bd42cd3,
  0x3f0df801320481761614,
  0x39a461fab561e717621d,
  0x569128933693cfe28152,
  0x3508383e3861bad7bf54,
  0x045ce7b59d160d92ffa4,
  0x18f0c23d8a17cf04723c,
  0x5f7649741289dba87904,
  0x06dc98a8531a4ee3b66f,
  0x1d4288671456b3c437a9,
  0x8c8220ee62521c926c0a,
  0x63f862d462796d314694,
  0x1ddc05591e42fd05d4b3,
  0x5bca692e9d237306ac5c,
  0x89a2e703e15fb492295c,
  0x0c39f7f8da64d8872a89,
  0x3a0c0699641441f29e99,
  0x6fa168d59e22da57d23d,
  0x91dff01f7e8d1985424f,
  0x0ccb4040199192c00bcd,
  0x3834d271de9a7da1f354,
  0x991131c8b502e70746c4,
  0x50e411f9a57ee266f509,
  0x66252156ad686ac45ef5,
  0x8e70d6a1757ea8b550a8,
  0x1c60b073eb7f50e24340,
  0x67a71024d22487563e6f,
  0x8f99506e8e67b0d54037,
  0x02ab64c4f33e43216b89,
  0x8bc7c967a88a68c0e048,
  0x39d1a864527c5fb29c9d,
  0x04f6a03a5548222426f0,
  0x931911727264d354b1ff,
  0x3196c1d38c600a143833,
  0x3c9de67318207d149262,
  0x0b99c49cf138ec734106,
  0x0f806985fb3a0cc32002,
  0x11715494e42b4db5a87f,
  0x7f1ec400759d9699126a,
  0x021848af217c0a803c9d,
  0x3430961b4c0352f3a100,
  0x3e1413930737c2e0c152,
  0x901c58484a42eab5676a,
  0x56a831a5f6211ac1ad86,
  0x260cc015e47d76e9deb6,
  0x21a9e3439a754992b32d,
  0x01329064c73bc3b11ef3,
  0x0d4925da7d50a1c440dd,
  0x508c59d6f1579639c88b,
  0x30028909bd37cc242e81,
  0x75b9b98a46402271a48c,
  0x3450d411c9592f2993cc,
  0x8db88823484d4524195c,
  0x785c48524339be17ab9b,
  0x32c8e5e6d5576d01d517,
  0x4f57746f186e9fd55ff0,
  0x34b048fa72479e282d97,
  0x742542e3da50666704e5,
  0x62c06978a14dc7069a4c,
  0x228f301e0a013758c24e,
  0x9722a53353927d66b13c,
  0x6d66f251363cbc92a976,
  0x39c464f087210596f1d0,
  0x718ea69e336241645ca6,
  0x6f49967bb107229717ea,
  0x2e2da3a6ed4e5f22e2fc,
  0x9dd399f12c7b68f05d85,
  0x4d4182be3f92f7a74f3b,
  0x6e5cb108845209e45763,
  0x3bc08291e71ef822aec2,
  0x0e0345761c14071469a0,
  0x03af819eed6070d11d8d,
  0x695344604c166be89fb3,
  0x12e5b1cc926922c0f066,
  0x3f7db6c9a86a84d51aec,
  0x2f43c3d90e7587b4e8ea,
  0x9e796318322320855658,
  0x534e9668988bd2770204,
  0x71765705569449b55846,
  0x6780660af3685f95d679,
  0x912585bc857f1621c307,
  0x5419184ddd4826a2f927,
  0x2b4d98c9e241908956bc,
  0x77dae063ff2339a4f57c,
  0x9f1a389067232e84cc7e,
  0x9caaf319ab0e9c242591,
  0x0c8854a5f67d92683af2,
  0x81531104bb26c0c18b71,
  0x175989b0226a19b398da,
  0x081471fefc549050ccde,
  0x57e159b6993197263b32,
  0x44f473bfaa66a80763c9,
  0x8516286a564f7cb414fb,
  0x9c9ab16b6b8955191329,
  0x12faa3e73e495ed25537,
  0x96fa512801217414e874,
  0x65cef6eca16c98f3f415,
  0x47c9c31044226385a234,
  0x7f3917a1923dc6e3c97e,
  0x28d0b73b354817e56117,
  0x6f25a66ac09668c13252,
  0x60f310af780882217ca0,
  0x2f07e03fda1dcd4245f8,
  0x0148a2d44964a3e3ca5f,
  0x8fad2244fd5e7838f4bd,
  0x15f176e025476f677530,
  0x7d0dd67ba9348a351d36,
  0x44b4e364f7444a4574ce,
  0x8126f526a2601c1584a5,
  0x9f8a068a68336756cd40,
  0x130586dae5637bf745e5,
  0x7fb5845bcb9634e6080d,
  0x6932b07c7e196956cdad,
  0x25d6d178c31c5f578bfb,
  0x27b7337251043bb1c610,
  0x404823a3020edd27a4e0,
  0x3982731bc13afe79e74d,
  0x00c325e6c88a2d8342f8,
  0x2972f702fa862163f611,
  0x4bf10630401d2d58a8d2,
  0x64d53270c33533c398f3,
  0x522b962b1a37f7f62ea3,
  0x51d3b018db1dda62170a,
  0x500ec11f9f0dfe202baa,
  0x3a7e96210056123125a6,
  0x78b1f811c94863f1dadf,
  0x6e3b319d9c10b5837f42,
  0x03b93992f81fb2b211e0,
  0x93dc20405c6fedc36910,
  0x88f4b4ffa02cabb64a0b,
  0x8101c149186724a66757,
  0x941f84914a396239b2d4,
  0x13c777b23b33a241bd97,
  0x62b678b03f0726137b68,
  0x169bc8213b095446326e,
  0x8d08328ebd41c8516881,
  0x992604f53b234ed0b04c,
  0x5c05763a5b912345da3b,
  0x05f68758ca672084cdae,
  0x23e4119b3c2a4c73dabc,
  0x2d1d217cd61135f75943,
  0x7bf537f1c87228f01a4a,
  0x125bf9ed9750a192f0c2,
  0x7e9e96d5041882790b06,
  0x4ac812def7309c48a472,
  0x0e96e05d700594431d90,
  0x075d1254b1760e308e56,
  0x0866e13a7a32d4c58064,
  0x073644160c797a9108f5,
  0x76011210ec42a9d3b268,
  0x4aa1154876584f83d5f1,
  0x247bd634224e8ef33d82,
  0x4ba9d2c25959df555cf7,
  0x30cec144308c5c82f2c0,
  0x5eeae42bbb8e4bb349f8,
  0x6983f582884d0741b59a,
  0x28f714bf6485f4160fe9,
  0x3b6218177e4dd6f648a9,
  0x5b5701d0b42e9156528a,
  0x1bcef5a54763d766ef5d,
  0x8458c90ff9758f26c079,
  0x168b1293304ed5150c5e,
  0x294437471601de4299d2,
  0x6e9d23dea516b5f14575,
  0x4d8b31c231149a579047,
  0x32848348396736972dea,
  0x29b2955dc36908d64296,
  0x907106bd8282c9a89763,
  0x019886eed3711d47783e,
  0x9a604933d40cabb1a71f,
  0x286b27989355c02757f9,
  0x737ad9f0f7271bd15b92,
  0x9ffbf67aa722d6703ca0,
  0x9ed792fa62397e82ed6b,
  0x903345d22a2d036941d9,
  0x0f58f86825341fa23d70,
  0x2c371262bf6e88a6ed08,
  0x6d2b32386f3de737163c,
  0x3396b11862395134c5cc,
  0x021f3837bf9709991c25,
  0x6bc961304d866b02f1de,
  0x20de66ff9919fc596b44,
  0x89c3f86482129eb91879,
  0x16f8e10c24645811b0fc,
  0x6589c8597350ea47e722,
  0x7b686207ac66c1d3af76,
  0x91a7443d2167d839822f,
  0x8d87b8bae4361492d36b,
  0x1bda49278a3b27b8b4df,
  0x7a16103359781ef54c1a,
  0x2d7805887e015e665450,
  0x7c5b42bb1f210f97f4c6,
  0x9cc1934a962a69c3918b,
  0x073952e388589c53d540,
  0x5183b709ff1a0b814c0f,
  0x4e303237a90bfd84093e,
  0x752a85d562398a516649,
  0x9184206aff7a7a062ad3,
  0x938ed714157560a0abeb,
  0x888b24d6f71b5a699020,
  0x394782db4c726f15e918,
  0x6332d6ee10536a647582,
  0x16d1b9be2c4da8a9f0fa,
  0x7b514527408a84429042,
  0x7ca0b567c2172982fd3b,
  0x0ed6f187bc62426825d8,
  0x4c0640c65a77af13528d,
  0x821e997a27347e47172c,
  0x6838d12d85130c174e85,
  0x89f9e6e4ad1e09d4daa2,
  0x9c2dc5123e0d0a17c876,
  0x0a97a5c1d584749061c3,
  0x87f780bb6e0e99150739,
  0x684b320ab59188763b6a,
  0x8aba04e37c884ac5eea1,
  0x5b6179357d182509063a,
  0x4bc321bcd206fcd75653,
  0x452909d3db03c35571f6,
  0x6e0f5014a24b1c20a954,
  0x189da2b18f137d96ce99,
  0x78a343b3168a4f32b28f,
  0x49ec430212955be5c91b,
  0x2c2f4636694b1bb32242,
  0x804337bc007aacf301b9,
  0x6294d7d4179d25d7a89d,
  0x30b0861de90424e8e29f,
  0x0287d6071671b62954a7,
  0x2b3cc58b71335a051bfd,
  0x98ece6fa50695d631548,
  0x6c5023107e10fbc0ee95,
  0x0a182489fa12b3493e05,
  0x9e6942f68f0c53e4d947,
  0x0a4f538c848a3dd0a675,
  0x96a701583d8125982964,
  0x09ff555a989b54291dfc,
  0x120c60ea6e3cbae42a77,
  0x0a1019d09a88b1755930,
  0x68a20409d1720682af5c,
  0x33db40de07372f6776a1,
  0x5fd41683da70edc4871e,
  0x5764c49be24b819098fb,
  0x2aed36598f9371671a5d,
  0x4e95a174959f60f9056a,
  0x3a1818374f1464f884d7,
  0x1c4f65427677b7e1ef26,
  0x605f525b094739394eab,
  0x548c01797c02ecf84d51,
  0x699fc544ae987f56bd32,
  0x81358412ef418e81e988,
  0x11181343ed302079f05f,
  0x2ca0c497f184f82637d6,
  0x0bf32874e1796bf1e636,
  0x756af3b8c8312097faa7,
  0x3bd317ea506da5f23a87,
  0x2ad0c36a7775d655bde5,
  0x644942c5356824a33c55,
  0x54b2233ab05c17c1d5f6,
  0x699e35c8e830059784d0,
  0x055472d4d24d9779536b,
  0x75b46507b4229d144c0b,
  0x982be5a65d9065b0513e,
  0x70f645237a2df2e76860,
  0x2139b15c5c53fe92cebc,
  0x830957a3de63f8a750db,
  0x9a4a73a5fb2db2508451,
  0x90a7324e5120f136eae8,
  0x5c69e30db88e18156555,
  0x2507f6aba64503c91cce,
  0x7b8898e2ec79ce635b23,
  0x6eb2462a18149ae4c981,
  0x28f2a4653a3b49a7ce1e,
  0x1550d2439d00ddb2d763,
  0x2e7b1438911321b7d267,
  0x2098e467fb4d3f59d865,
  0x0cfe636d7286aae8329c,
  0x8816736b63727d06dd6f,
  0x032a9626209bbbc1b213,
  0x717669488f78ea45cf4d,
  0x6efbe217bc7e7c80f602,
  0x8c8950c4e54869258fdd,
  0x8c7bc46ab61f65509611,
  0x26336207ae9e90433bda,
  0x1d8f88d80f272352823f,
  0x101e4592fd74eac19704,
  0x8e24b47eb87979025811,
  0x167c4530172530c1a880,
  0x243c5249094bef631ece,
  0x629d24da9c7529d70912,
  0x400dc4e48d1e5688b987,
  0x09b850dcb615fda710c4,
  0x20f58054a9657565fdcd,
  0x65871028f23055121fd6,
  0x9307206d899fc3c6bc24,
  0x0a338184013f8721f588,
  0x57c0301acd418d225146,
  0x68d5b2d0537eb9370dfe,
  0x955e22d1757f69d8c615,
  0x556e86312463a411e5da,
  0x789a26d7050f8d660c40,
  0x16e491de123a53a05303,
  0x18f5d7cfd18bdce8442f,
  0x849bf62ef78c66187eb7,
  0x121af543d901d822fd13,
  0x94914359a27ffa962a50,
  0x15065611f8906c080222,
  0x81800390d150cd1016d5,
  0x49c2215400638e96b190,
  0x2500d265b506d6e4189c,
  0x05aa15ec3970b0d2a0c2,
  0x93baa4685494c4e39b78,
  0x7e03d78b33409d425f51,
  0x6f26d72ed3601c25be5d,
  0x1325a5eaed3c3445c5f6,
  0x707e8082723a8ba1bf22,
  0x3c4866689d734ae1db10,
  0x497154cb5f901f934fdc,
  0x0862f35e037c31f51354,
  0x263082e731018ab1e328,
  0x5741e6a70a6a8234dff7,
  0x328cf4e66b9c9e398f66,
  0x5d9d21887b5adb130c1c,
  0x98f302de543bfed1339b,
  0x7939e9df7014f5666414,
  0x7dc8496cbb7cbd99d8d2,
  0x61cc61ffb18e4a5581f4,
  0x991659e8bb916ce09704,
  0x55bea6368b55951067c9,
  0x9baf58c1941a68f8b935,
  0x16fa11d6dc03d019849f,
  0x9378810b740663a16eea,
  0x449fb365d54743b2b032,
  0x75b0e097bc5285f94c6b,
  0x30a6150db0210bc37540,
  0x8c0a2405977623552457,
  0x674754bd43111f930e7d,
  0x6c9c95e00d85083398ad,
  0x815b86c2641f82788fd1,
  0x800c608fd1635634dee9
};

// static
void ZobristHash::calculate(ChessBoard* const board)
{
  board->zobrist_hash(0);
  for (const Color color : {Color::Black, Color::White}) {
    for (const PieceBoard& piece_board : board->color_board(color)) {
      const Piece::piece_index_t piece_index =
          piece_board.piece().piece_index();
      for (const Position& position : piece_board.positions()) {
        update(position, piece_index, board);
      }
    }
  }
}

// static
void ZobristHash::update(Color color,
                         Piece::piece_index_t piece_index,
                         const Position& position,
                         ChessBoard* board)
{
  const int color_index = static_cast<int>(color);
  board->update_hash(c_piece_randomness[color_index * 384 + piece_index * 64 + index(position)]);
}

} // namespace olaf
